{
	"AWSTemplateFormatVersion": "2010-09-09",
	"Description": "Deploy all resources that are needed for the documentation page.",
	"Parameters": {
		"CodePipelineArtifacts": {
			"Description": "The S3 bucket name where CodePipeline will store the artifacts (this is needed only by CP to work, and pass task results to the next stage).",
			"Type": "String"
		},
		"DomainParam": {
			"Description": "Type your domain for your project",
			"Type": "String"
		},
		"Stage": {
			"Description": "Select what type of environment are you deploying.",
			"Type": "String",
			"AllowedValues": [
				"master",
				"development"
			],
			"Default": "development"
		},
		"CertificateARNParam": {
			"Description": "The ARN of a SSL Certificate.",
			"Type": "String"
		},
		"GitHubToken": {
			"Description": "You need to create a Personal access tokens (https://github.com/settings/tokens) for CodePipeline to have access to the GitHub repo despite it being public.",
			"Type": "String"
		}
	},
	"Resources": {
		"CloudFrontStart": {
			"Type": "AWS::CloudFront::Distribution",
			"Properties": {
				"DistributionConfig": {
					"Comment": {
						"Ref": "DomainParam"
					},
					"DefaultCacheBehavior": {
						"TargetOriginId": {
							"Fn::Sub": "${S3WebpageDocumentation}.s3-website-${AWS::Region}.amazonaws.com"
						},
						"ViewerProtocolPolicy": "redirect-to-https",
						"AllowedMethods": [
							"GET",
							"HEAD"
						],
						"CachedMethods": [
							"GET",
							"HEAD"
						],
						"Compress": true,
						"SmoothStreaming": false,
						"CachePolicyId": {
							"Ref": "CloudFrontWebpgeCachePolicy"
						}
					},
					"Enabled": true,
					"Origins": [
						{
							"DomainName": {
								"Fn::Sub": "${S3WebpageDocumentation}.s3-website-${AWS::Region}.amazonaws.com"
							},
							"Id": {
								"Fn::Sub": "${S3WebpageDocumentation}.s3-website-${AWS::Region}.amazonaws.com"
							},
							"CustomOriginConfig": {
								"HTTPPort": 80,
								"HTTPSPort": 443,
								"OriginProtocolPolicy": "http-only",
								"OriginSSLProtocols": [
									"TLSv1.1"
								]
							}
						}
					],
					"Aliases": [
						{
							"Ref": "DomainParam"
						}
					],
					"ViewerCertificate": {
						"AcmCertificateArn": {
							"Ref": "CertificateARNParam"
						},
						"SslSupportMethod": "sni-only"
					},
					"DefaultRootObject": "index.html",
					"HttpVersion": "http2",
					"IPV6Enabled": true,
					"PriceClass": "PriceClass_200",
					"CustomErrorResponses": [
						{
							"ErrorCachingMinTTL": 300,
							"ErrorCode": 404,
							"ResponseCode": 200,
							"ResponsePagePath": "/index.html"
						},
						{
							"ErrorCachingMinTTL": 300,
							"ErrorCode": 403,
							"ResponseCode": 200,
							"ResponsePagePath": "/index.html"
						}
					],
					"Restrictions": {
						"GeoRestriction": {
							"RestrictionType": "blacklist",
							"Locations": [
								"CN",
								"LA",
								"CU",
								"VN",
								"KP"
							]
						}
					}
				}
			}
		},
		"CloudFrontWebpgeCachePolicy": {
			"Type": "AWS::CloudFront::CachePolicy",
			"Properties": {
				"CachePolicyConfig": {
					"Name": "default",
					"Comment": "Default setting.",
					"DefaultTTL": 86400,
					"MaxTTL": 31536000,
					"MinTTL": 86400,
					"ParametersInCacheKeyAndForwardedToOrigin": {
						"CookiesConfig": {
							"CookieBehavior": "all"
						},
						"EnableAcceptEncodingBrotli": true,
						"EnableAcceptEncodingGzip": true,
						"HeadersConfig": {
							"HeaderBehavior": "none"
						},
						"QueryStringsConfig": {
							"QueryStringBehavior": "all"
						}
					}
				}
			}
		},
		"S3WebpageDocumentation": {
			"Type": "AWS::S3::Bucket",
			"Properties": {
				"AccessControl": "PublicRead",
				"BucketName": "documentation.0x4447.com",
				"CorsConfiguration": {
					"CorsRules": [
						{
							"AllowedHeaders": [
								"Authorization"
							],
							"AllowedMethods": [
								"GET"
							],
							"AllowedOrigins": [
								"*"
							],
							"MaxAge": 3000
						}
					]
				},
				"WebsiteConfiguration": {
					"ErrorDocument": "error",
					"IndexDocument": "home"
				}
			}
		},
		"S3WebpageDocumentationPolicy": {
			"Type": "AWS::S3::BucketPolicy",
			"Properties": {
				"Bucket": {
					"Ref": "S3WebpageDocumentation"
				},
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Sid": "PublicReadGetObject",
							"Effect": "Allow",
							"Principal": "*",
							"Action": "s3:GetObject",
							"Resource": {
								"Fn::Sub": "arn:aws:s3:::${S3WebpageDocumentation}/*"
							}
						}
					]
				}
			}
		},
		"PipelineWebpageDocumentation": {
			"Type": "AWS::CodePipeline::Pipeline",
			"Properties": {
				"Name": "webpage_documentation",
				"ArtifactStore": {
					"Location": {
						"Ref": "CodePipelineArtifacts"
					},
					"Type": "S3"
				},
				"RoleArn": {
					"Fn::GetAtt": [
						"PipelineWebpageDocumentationRole",
						"Arn"
					]
				},
				"Stages": [
					{
						"Name": "Get",
						"Actions": [
							{
								"Name": "Material",
								"RunOrder": 1,
								"ActionTypeId": {
									"Category": "Source",
									"Owner": "ThirdParty",
									"Provider": "GitHub",
									"Version": "1"
								},
								"Configuration": {
									"Owner": "0x4447-office",
									"Repo": "0x4447_webpage_documentation",
									"Branch": {
										"Ref": "Stage"
									},
									"PollForSourceChanges": false,
									"OAuthToken": {
										"Ref": "GitHubToken"
									}
								},
								"OutputArtifacts": [
									{
										"Name": "material"
									}
								]
							}
						]
					},
					{
						"Name": "Cast",
						"Actions": [
							{
								"Name": "Mold",
								"RunOrder": 1,
								"InputArtifacts": [
									{
										"Name": "material"
									}
								],
								"Configuration": {
									"ProjectName": {
										"Ref": "CodeBuildWebpageDocumentation"
									}
								},
								"ActionTypeId": {
									"Category": "Build",
									"Owner": "AWS",
									"Provider": "CodeBuild",
									"Version": "1"
								}
							}
						]
					}
				]
			}
		},
		"PipelineWebpageDocumentationRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": "webpage_documentation_codepipeline",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "codepipeline.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				}
			}
		},
		"PipelineWebpageDocumentationWebhook": {
			"Type": "AWS::CodePipeline::Webhook",
			"Properties": {
				"Authentication": "GITHUB_HMAC",
				"AuthenticationConfiguration": {
					"SecretToken": {
						"Ref": "GitHubToken"
					}
				},
				"Filters": [
					{
						"JsonPath": "$.ref",
						"MatchEquals": "refs/heads/{Branch}"
					}
				],
				"TargetPipeline": {
					"Ref": "PipelineWebpageDocumentation"
				},
				"TargetAction": "Material",
				"TargetPipelineVersion": {
					"Fn::GetAtt": [
						"PipelineWebpageDocumentation",
						"Version"
					]
				},
				"RegisterWithThirdParty": true
			}
		},
		"PipelineWebpageDocumentationPolicyCB": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "code_build",
				"Roles": [
					{
						"Ref": "PipelineWebpageDocumentationRole"
					}
				],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"codebuild:BatchGetBuilds",
								"codebuild:StartBuild"
							],
							"Resource": {
								"Fn::Sub": "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/${CodeBuildWebpageDocumentation}"
							}
						}
					]
				}
			}
		},
		"PipelineWebpageDocumentationPolicyS3": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"PolicyName": "s3",
				"Roles": [
					{
						"Ref": "PipelineWebpageDocumentationRole"
					}
				],
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": "s3:*",
							"Resource": {
								"Fn::Sub": "arn:aws:s3:::${CodePipelineArtifacts}/*"
							}
						}
					]
				}
			}
		},
		"CodeBuildWebpageDocumentation": {
			"Type": "AWS::CodeBuild::Project",
			"Properties": {
				"Name": "webpage_documentation",
				"ServiceRole": {
					"Fn::GetAtt": [
						"CodeBuildWebpageDocumentationRole",
						"Arn"
					]
				},
				"TimeoutInMinutes": 60,
				"Source": {
					"Type": "CODEPIPELINE",
					"BuildSpec": "buildspec.yml"
				},
				"Artifacts": {
					"Type": "CODEPIPELINE"
				},
				"Environment": {
					"Type": "LINUX_CONTAINER",
					"ComputeType": "BUILD_GENERAL1_SMALL",
					"Image": "aws/codebuild/standard:3.0",
					"EnvironmentVariables": [
						{
							"Name": "S3_BUCKET",
							"Type": "PLAINTEXT",
							"Value": {
								"Ref": "S3WebpageDocumentation"
							}
						},
						{
							"Name": "DISTRIBUTION_ID",
							"Type": "PLAINTEXT",
							"Value": {
								"Ref": "CloudFrontStart"
							}
						}
					]
				}
			}
		},
		"CodeBuildWebpageDocumentationRole": {
			"Type": "AWS::IAM::Role",
			"Properties": {
				"RoleName": "webpage_documentation_codebuild",
				"AssumeRolePolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Principal": {
								"Service": "codebuild.amazonaws.com"
							},
							"Action": "sts:AssumeRole"
						}
					]
				}
			}
		},
		"CodeBuildWebpageDocumentationPolicyCloudFrontCreateInvalidation": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"Roles": [
					{
						"Ref": "CodeBuildWebpageDocumentationRole"
					}
				],
				"PolicyName": "cloud_front_invalidate",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"cloudfront:CreateInvalidation"
							],
							"Resource": "*"
						}
					]
				}
			}
		},
		"CodeBuildWebpageDocumentationPolicyCWL": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"Roles": [
					{
						"Ref": "CodeBuildWebpageDocumentationRole"
					}
				],
				"PolicyName": "cloud_watch_log_access",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"logs:CreateLogGroup",
								"logs:CreateLogStream",
								"logs:PutLogEvents"
							],
							"Resource": [
								{
									"Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
								}
							]
						}
					]
				}
			}
		},
		"CodeBuildWebpageDocumentationPolicyS3": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"Roles": [
					{
						"Ref": "CodeBuildWebpageDocumentationRole"
					}
				],
				"PolicyName": "s3_artifact_access",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": "s3:*",
							"Resource": {
								"Fn::Sub": "arn:aws:s3:::${CodePipelineArtifacts}/*"
							}
						}
					]
				}
			}
		},
		"CodeBuildWebpageDocumentationPolicyCloudFrontList": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"Roles": [
					{
						"Ref": "CodeBuildWebpageDocumentationRole"
					}
				],
				"PolicyName": "cloud_front_list",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"cloudfront:ListDistributions"
							],
							"Resource": "*"
						}
					]
				}
			}
		},
		"CodeBuildWebpageDocumentationPolicyS3Hosting": {
			"Type": "AWS::IAM::Policy",
			"Properties": {
				"Roles": [
					{
						"Ref": "CodeBuildWebpageDocumentationRole"
					}
				],
				"PolicyName": "s3_hosting",
				"PolicyDocument": {
					"Version": "2012-10-17",
					"Statement": [
						{
							"Effect": "Allow",
							"Action": [
								"s3:PutObject",
								"s3:DeleteObject"
							],
							"Resource": {
								"Fn::Sub": "arn:aws:s3:::${S3WebpageDocumentation}/*"
							}
						}
					]
				}
			}
		}
	}
}